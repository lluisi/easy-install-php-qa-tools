#!/bin/bash
#
# The following script downloads the packages defined in composer.json with a single composer install command
# and then point this bins to your /usr/local/bin folder.
# USAGE:
# ./easy
# Follow the instructions

LOGFILE=${PWD}/'symlinks.log'
LOCALBIN='/usr/local/bin';
VENDORFOLDER='vendor'
BINFOLDER=$VENDORFOLDER'/bin'

checkComposer()
{
	checkPermissions

	command -v composer >/dev/null 2>&1 || {
		printf "I require composer but it's not installed.\n";
		printf "Install composer?.\n";
		select yn in "Yes" "No"; do
		    case $yn in
		        Yes ) installComposer; break;;
		        No ) exit 1;;
		    esac
		done
	}	
}

installComposer()
{
	curl -sS https://getcomposer.org/installer | php
	mv composer.phar /usr/local/bin/composer
}

checkPermissions()
{
	if [ ! -w "$LOCALBIN" ] ; then
        printf "You don't have permissions to write to $LOCALBIN \n";
        printf "Please run the script as sudo: sudo ./easy \n";
        exit 1;
    fi
}

firstInstallation()
{
	updateRepo
	checkPermissions

	composer install

	PWD=pwd
	cd $BINFOLDER

	BINLIST=`ls`


	for b in $BINLIST; do
		if [ ! -f $LOCALBIN'/'$b ]; then
	    	ln -s $PWD'/'$b $LOCALBIN'/'$b
	    	echo $LOCALBIN'/'$b >> $LOGFILE;
	    fi
	done

	printf "That's it! These tools are now available on your system:\n${BINLIST[@]}\n\n"
	printf "Now just use it!\n";

	exit 1;
}

update()
{
	updateRepo
	composer update

	printf "Packages are successfully updated\n";

	exit 1;
}

uninstall()
{
	checkPermissions
	
	if [ ! -f $LOGFILE ]; then echo "No packages to remove" exit 1; fi

	while read binlink; do
		if [ -f "$binlink" ]; then
			rm $binlink;
		fi
	done < $LOGFILE

	if [ -d $VENDORFOLDER ]; then
		rm -rf $VENDORFOLDER
	fi

	if [ -f "composer.lock" ]; then
		rm "composer.lock"
	fi

	if [ -f "$LOGFILE" ]; then
		rm "$LOGFILE"
	fi

	printf "\nSuccessfully uninstalled\nThanks!\n";

	exit 1;
}

updateRepo()
{
	git pull origin master
}

checkComposer


printf "Easy install PHP QA Tools:\n";
select iur in "First installation" "Update packages" "Uninstall" "Quit"; do
    case $iur in
        "First installation" ) firstInstallation; break;;
		"Update packages" ) update; break;;
		"Uninstall" ) uninstall; break;;
        "Quit" ) exit 1;
    esac
done